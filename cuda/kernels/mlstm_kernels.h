#pragma once

template <typename T>
void launch_mlstm_forward(const T *x,
                          const T *h_prev,
                          const T *C_prev,
                          const T *n_prev,
                          T *C,
                          T *n,
                          T *h,
                          const T *w_k,
                          const T *w_v,
                          const T *w_q,
                          const T *w_i,
                          const T *w_f,
                          const T *w_o,
                          const T *b_k,
                          const T *b_v,
                          const T *b_q,
                          const T *b_i,
                          const T *b_f,
                          const T *b_o,
                          int batch_size,
                          int input_size,
                          int hidden_size);

template <typename T>
void launch_mlstm_backward(const T *grad_h,
                           const T *C,
                           const T *n,
                           const T *x,
                           const T *w_k,
                           const T *w_v,
                           const T *w_q,
                           const T *w_i,
                           const T *w_f,
                           const T *w_o,
                           T *grad_x,
                           T *grad_C_prev,
                           T *grad_n_prev,
                           T *grad_w_k,
                           T *grad_w_v,
                           T *grad_w_q,
                           T *grad_w_i,
                           T *grad_w_f,
                           T *grad_w_o,
                           T *grad_b_k,
                           T *grad_b_v,
                           T *grad_b_q,
                           T *grad_b_i,
                           T *grad_b_f,
                           T *grad_b_o,
                           int batch_size,
                           int input_size,
                           int hidden_size);