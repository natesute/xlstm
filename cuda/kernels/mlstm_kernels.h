#ifndef MLSTM_KERNELS_H
#define MLSTM_KERNELS_H

template <typename T>
void launch_mlstm_forward(const T *x,
                          const T *h_prev,
                          const T *C_prev,
                          const T *n_prev,
                          T *C,
                          T *n,
                          T *h,
                          const T *w_k,
                          const T *w_v,
                          const T *w_q,
                          const T *w_i,
                          const T *w_f,
                          const T *w_o,
                          const T *b_k,
                          const T *b_v,
                          const T *b_q,
                          const T *b_i,
                          const T *b_f,
                          const T *b_o,
                          int batch_size,
                          int input_size,
                          int hidden_size);

template <typename T>
void launch_mlstm_backward(const T *grad_h,
                           const T *C,
                           const T *n,
                           const T *x,
                           const T *w_k,
                           const T *w_v,
                           const T *w_q,
                           const T *w_i,
                           const T *w_f,
                           const T *w_o,
                           const T *grad_x,
                           const T *grad_C_prev,
                           const T *grad_n_prev,
                           const T *grad_w_k,
                           const T *grad_w_v,
                           const T *grad_w_q,
                           const T *grad_w_i,
                           const T *grad_w_f,
                           const T *grad_w_o,
                           const T *grad_b_k,
                           const T *grad_b_v,
                           const T *grad_b_q,
                           const T *grad_b_i,
                           const T *grad_b_f,
                           const T *grad_b_o,
                           int batch_size,
                           int input_size,
                           int hidden_size);


#ifdef __CUDACC__
// mLSTM forward pass kernel
template <typename T>
__global__ void mlstm_forward_kernel(const T *__restrict__ x,
                          const T *__restrict__ h_prev,
                          const T *__restrict__ C_prev,
                          const T *__restrict__ n_prev,
                          T *__restrict__ C,
                          T *__restrict__ n,
                          T *__restrict__ h,
                          const T *__restrict__ w_k,
                          const T *__restrict__ w_v,
                          const T *__restrict__ w_q,
                          const T *__restrict__ w_i,
                          const T *__restrict__ w_f,
                          const T *__restrict__ w_o,
                          const T *__restrict__ b_k,
                          const T *__restrict__ b_v,
                          const T *__restrict__ b_q,
                          const T *__restrict__ b_i,
                          const T *__restrict__ b_f,
                          const T *__restrict__ b_o,
                          int batch_size,
                          int input_size,
                          int hidden_size);

// mLSTM backward pass kernel
template <typename T>
__global__ void mlstm_backward_kernel(const T *__restrict__ grad_h,
                            const T *__restrict__ C,
                            const T *__restrict__ n,
                            const T *__restrict__ x,
                            const T *__restrict__ w_k,
                            const T *__restrict__ w_v,
                            const T *__restrict__ w_q,
                            const T *__restrict__ w_i,
                            const T *__restrict__ w_f,
                            const T *__restrict__ w_o,
                            const T *__restrict__ b_k,
                            const T *__restrict__ b_v,
                            const T *__restrict__ b_q,
                            const T *__restrict__ b_i,
                            const T *__restrict__ b_f,
                            const T *__restrict__ b_o,
                            const T *__restrict__ grad_x,
                            const T *__restrict__ grad_C_prev,
                            const T *__restrict__ grad_n_prev,
                            const T *__restrict__ grad_w_k,
                            const T *__restrict__ grad_w_v,
                            const T *__restrict__ grad_w_q,
                            const T *__restrict__ grad_w_i,
                            const T *__restrict__ grad_w_f,
                            const T *__restrict__ grad_w_o,
                            const T *__restrict__ grad_b_k,
                            const T *__restrict__ grad_b_v,
                            const T *__restrict__ grad_b_q,
                            const T *__restrict__ grad_b_i,
                            const T *__restrict__ grad_b_f,
                            const T *__restrict__ grad_b_o,
                            int batch_size,
                            int input_size,
                            int hidden_size);

#endif // __CUDACC__

#endif // MLSTM_KERNELS_H