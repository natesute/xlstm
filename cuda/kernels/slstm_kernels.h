#pragma once

template <typename T>
void launch_slstm_forward(const T *x,
                          const T *h_prev,
                          const T *c_prev,
                          const T *n_prev,
                          T *c,
                          T *n,
                          T *h,
                          const T *w_i,
                          const T *w_f,
                          const T *w_z,
                          const T *w_o,
                          const T *r_i,
                          const T *r_f,
                          const T *r_z,
                          const T *r_o,
                          const T *b_i,
                          const T *b_f,
                          const T *b_z,
                          const T *b_o,
                          int batch_size,
                          int input_size,
                          int hidden_size);
                      

template <typename T>
void launch_slstm_backward(const T *grad_h,
                           const T *grad_c,
                           const T *c,
                           const T *n,
                           const T *c_prev,
                           const T *n_prev,
                           const T *x,
                           const T *h_prev,
                           const T *w_i,
                           const T *w_f,
                           const T *w_z,
                           const T *w_o,
                           const T *r_i,
                           const T *r_f,
                           const T *r_z,
                           const T *r_o,
                           T *grad_x,
                           T *grad_h_prev,
                           T *grad_c_prev,
                           T *grad_n_prev,
                           T *grad_w_i,
                           T *grad_w_f,
                           T *grad_w_z,
                           T *grad_w_o,
                           T *grad_r_i,
                           T *grad_r_f,
                           T *grad_r_z,
                           T *grad_r_o,
                           T *grad_b_i,
                           T *grad_b_f,
                           T *grad_b_z,
                           T *grad_b_o,
                           int batch_size,
                           int input_size,
                           int hidden_size);
